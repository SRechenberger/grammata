program Maximum
with
	var as := [4,2,6,3,1,7,2,4];
begin

	base elem says
		elem(null,nil).
		elem(X,cons(X,Xs)).
		elem(Y,cons(X,Ys)) :- elem(Y,Ys).
	end

	query traverse(list) asks elem for T ?-
		elem(T,list)
	end

	proc max(list) 
	with
		var curr;
	does
		keep (-1);
		curr := traverse($list);
		
		if $curr == null then
			return remind;
		end

		if $curr > remind then
			keep $curr;
		end		
		backtrack;	
	end
	
	proc sum(list)
	with 
		var curr;
	does
		keep 0;
		curr := traverse($list);
	
		if $curr == null then
			return remind;
		else
			keep (remind + $curr);
		end
		backtrack;
	end	

	proc main() does
		return pair(max($as),sum($as));
	end
end
